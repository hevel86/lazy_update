---
- name: Install Docker and Docker Compose
  hosts: "{{ target_hosts }}"  # Dynamically populated by Semaphore UI
  become: true

  tasks:
    - name: Gather OS distribution facts
      ansible.builtin.setup:
        gather_subset:
          - "min"

    - name: Debug distribution information
      debug:
        msg:
          - "Distribution: {{ ansible_distribution }}"
          - "Release: {{ ansible_distribution_release }}"
          - "Architecture: {{ ansible_architecture }}"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages for apt over HTTPS
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create the directory for apt keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and install Docker's GPG key for Debian
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: ansible_distribution == "Debian"

    - name: Add Docker repository for Debian
      ansible.builtin.shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      when: ansible_distribution == "Debian"

    - name: Set up Docker repository for Ubuntu
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when: ansible_distribution == "Ubuntu"

    - name: Debug repository list to check if Docker repo is added
      ansible.builtin.command: cat /etc/apt/sources.list.d/docker.list
      register: repo_check
      ignore_errors: yes

    - name: Show repository list debug output
      debug:
        var: repo_check

    - name: Update apt cache after adding Docker repo
      ansible.builtin.apt:
        update_cache: yes

    - name: Check if Docker package is available in the repository
      ansible.builtin.command: apt-cache policy docker-ce
      register: docker_package_check
      ignore_errors: yes

    - name: Show Docker package check results
      debug:
        var: docker_package_check

    - name: Fail if Docker package is not available
      ansible.builtin.fail:
        msg: "Docker package not available in the repository. Please check the repository configuration."
      when: docker_package_check.stdout == ""

    - name: Install Docker Engine, CLI, and Containerd for Debian/Ubuntu
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      register: docker_install_result
      failed_when: docker_install_result.rc != 0
      ignore_errors: yes

    - name: Fail if Docker installation fails
      ansible.builtin.fail:
        msg: "Docker installation failed"
      when: docker_install_result is failed

    - name: Ensure Docker service is started and enabled
      ansible.builtin.systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install Docker Compose plugin
      ansible.builtin.apt:
        name: docker-compose-plugin
        state: present

    - name: Add current user to the Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
        state: present
      become: yes
